### YamlMime:Tutorial
title: Skapa virtuella datorer med Azure CLI 2.0
metadata:
  title: Skapa virtuella datorer med Azure CLI 2.0
  description: "Kom igång med Azure CLI genom att skapa virtuella datorer."
  audience: Developer
  level: Beginner
  displayType: two-column
  interactive: azurecli
  ms.date: 02/08/2018
  ms.author: sttramer
  author: sptramer
  manager: rloutlaw
  ms.devlang: azurecli
  ms.technology: azure
  ms.openlocfilehash: e07276ba1417df6c6dda9d17fcd3028c0ce43191
  ms.sourcegitcommit: 8bceb7160506afe817dfa37722f57baf1513e7c6
  ms.translationtype: HT
  ms.contentlocale: sv-SE
  ms.lasthandoff: 02/09/2018
items:
- durationInMinutes: 1
  content: "I den här självstudien får du lära dig allt du behöver veta för att konfigurera en virtuell dator med Azure CLI 2.0. Självstudien omfattar även ämnen som rör utdatafrågor, återanvändning av Azure-resurser och rensning av resurser.\n\nDen här självstudien kan utföras interaktivt med erbjudandet via Azure Cloud Shell. Du kan även [installera CLI](install-azure-cli.md) lokalt.\n\nAnvänd __ctrl + skift + v__ (__cmd + skift + v__ på macOS) för att klistra in självstudietexten i Azure Cloud Shell."
- durationInMinutes: 1
  title: Logga in
  content: "Om du använder en lokal installation av CLI måste du logga in innan du utför ytterligare steg.\n\n```azurecli\naz login\n```\n\nSlutför inloggningsprocessen genom att följa stegen som visas i terminalen. "
- durationInMinutes: 1
  title: Skapa en resursgrupp
  content: "I Azure allokeras alla resurser i en resurshanteringsgrupp. Med resursgrupperna får du logiska grupperingar av resurserna som gör det lättare att arbeta med dem som en samling. I den här självstudiekursen finns alla skapade resurser i en grupp med namnet `TutorialResources`.\n\n```azurecli\naz group create --name TutorialResources --location eastus\n```"
- durationInMinutes: 4
  title: Skapa en virtuell dator
  content: "Virtuella datorer i Azure har ett stort antal beroenden. CLI skapar de här resurserna baserat på de kommandoradsargument som du anger.\n\nSkapa en ny virtuell dator som kör Ubuntu och som använder SSH-autentisering för inloggning.\n\n```azurecli\naz vm create --resource-group TutorialResources \\\n  --name TutorialVM1 \\\n  --image UbuntuLTS \\\n  --generate-ssh-keys \\\n  --verbose \n```\n\n> [!NOTE]\n> Om du redan har en SSH-nyckel med namnet `id_rsa` så används den här nyckeln för autentisering i stället för att generera en ny nyckel.\n\nNär den virtuella datorn skapas visas de lokala värdena som används och Azure-resurser som skapas till följd av alternativet `--verbose`.\nNär den virtuella datorn är klar returneras JSON från Azure-tjänsten, inklusive den offentliga IP-adressen.\n\n```json\n{\n  \"fqdns\": \"\",\n  \"id\": \"...\",\n  \"location\": \"eastus\",\n  \"macAddress\": \"...\",\n  \"powerState\": \"VM running\",\n  \"privateIpAddress\": \"...\",\n  \"publicIpAddress\": <PUBLIC_IP_ADDRESS>,\n  \"resourceGroup\": \"TutorialResources\",\n  \"zones\": \"\"\n}\n```\n\nBekräfta att den virtuella datorn körs genom att ansluta via SSH.\n\n```bash\nssh <PUBLIC_IP_ADDRESS>\n```\n\nGå vidare och logga ut från den virtuella datorn.\n\nDet finns andra sätt att hämta den här IP-adressen efter att den virtuella datorn har startats. I nästa avsnitt går vi igenom hur du kan få detaljerad information om den virtuella datorn och hur du kan filtrera den."
- durationInMinutes: 3
  title: "Få information om virtuella datorer med frågor"
  content: "Nu när du har skapat en virtuell dator kan du få detaljerad information om den. Det vanliga kommandot för att hämta information från en resurs är `show`.\n\n```azurecli\naz vm show --name TutorialVM1 --resource-group TutorialResources\n```\n\nDu ser en stor mängd information, vilket kan vara svåröverskådligt. Den returnerade JSON-filen innehåller information om autentisering, nätverksgränssnitt, lagring med mera. Det viktigaste är att den innehåller objekt-ID:na för Azure för de resurser som den virtuella datorn är ansluten till. Med objekt-ID:n kan du komma åt de här resurserna direkt om du vill ha mer information om den virtuella datorns konfiguration och funktioner. \n\nFör att extrahera önskat objekt-ID använder vi argumentet `--query`. Frågor skrivs med [frågespråket JMESPath](http://jmespath.org). Börja med att hämta objekt-ID:t för nätverksgränssnittskontrollanten (NIC).\n\n```azurecli\naz vm show --name TutorialVM1 \\\n  --resource-group TutorialResources \\\n  --query 'networkProfile.networkInterfaces[].id' \\\n  --output tsv\n```\n\nDet är mycket som händer här, bara av att du lägger till frågan. Varje del av frågan refererar till en nyckel i JSON-filen med utdata eller är en JMESPath-operator.\n\n* `networkProfile` är en nyckel för den översta JSON-filen som har `networkInterfaces` som en undernyckel. Om ett JSON-värde är en ordlista så refereras dess nycklar från den överordnade nyckeln med operatorn `.`.\n* Värdet `networkInterfaces` är en matris, så den är utplattad med operatorn `[]`. Den här operatorn kör resten av frågan på varje matriselement. I det här fallet hämtar den värdet `id` för varje matriselement.\n\nUtdataformatet `tsv` (tabbavgränsade värden) innefattar endast resultatdata och blanksteg som består av tabbar och nya rader.\nEftersom det returnerade värdet är en enda sträng är det säkert att tilldela direkt till en miljövariabel.\n\nGå vidare och tilldela objekt-ID:t för NIC till en miljövariabel nu.\n\n```bash\nNIC_ID=$(az vm show -n TutorialVM1 -g TutorialResources \\\n  --query 'networkProfile.networkInterfaces[].id' \\\n  -o tsv)\n```\n\nDet här exemplet visar också hur korta argument används. Du kan använda `-g` istället för `--resource-group`, `-n` istället för `--name` och `-o` istället för `--output`."
- durationInMinutes: 4
  title: "Ange miljövariabler från CLI-utdata"
  content: "Nu när du har ett NIC-ID kan du köra `az network nic show` för att hämta informationen.\n\n```azurecli\naz network nic show --ids $NIC_ID -g TutorialResources\n```\n\nDet här kommandot visar all information om nätverksgränssnittet för den virtuella datorn. Dessa data innehåller DNS-inställningar, IP-information, säkerhetsinställningar och MAC-adressen. Just nu är målet att hämta den offentliga IP-adressen och objekt-ID:na för undernätet.\n\n```azurecli\naz network nic show --ids $NIC_ID \\\n  -g TutorialResources \\\n  --query '{IP:ipConfigurations[].publicIpAddress.id, Subnet:ipConfigurations[].subnet.id}' \n```\n\n```json\n{\n  \"IP\": [\n    \"/subscriptions/.../resourceGroups/TutorialResources/providers/Microsoft.Network/publicIPAddresses/TutorialVM1PublicIP\"\n  ],\n  \"Subnet\": [\n    \"/subscriptions/.../resourceGroups/TutorialResources/providers/Microsoft.Network/virtualNetworks/TutorialVM1VNET/subnets/TutorialVM1Subnet\"\n  ]\n}\n```\n\nDet här kommandot visar ett JSON-objekt som har anpassade nycklar (\"IP\" och \"Subnet\") för de extraherade värdena. Även om dessa utdata inte är användbara för kommandoradsverktyg kan de öka läsbarheten, och de kan även användas med anpassade skript.\n\nÄndra kommandot för att ta bort de anpassade JSON-nycklarna och utdata som `tsv` för att kunna använda kommandoradsverktyg. Den här typen av utdata kan bearbetas av kommandot `read` i gränssnittet för att läsa in resultat i flera variabler. Eftersom två värden visas på separata rader måste kommandoavgränsaren `read` vara inställd på tom sträng istället för på standardinställningen med blanksteg på rad som inte är ny.\n\n```bash\nread -d '' IP_ID SUBNET_ID <<< $(az network nic show \\\n  --ids $NIC_ID -g TutorialResources \\\n  --query '[ipConfigurations[].publicIpAddress.id, ipConfigurations[].subnet.id]' \\\n  -o tsv)\n```\n\nDu kommer inte att använda undernäts-ID:t nu direkt, men spara det så att du slipper söka efter det igen senare. Använd ID:t för den offentliga IP-adressen för att leta upp den offentliga IP-adressen och lagra den i en gränssnittsvariabel så länge.\n\n```bash\nVM1_IP_ADDR=$(az network public-ip show --ids $IP_ID \\\n  -g TutorialResources \\\n  --query ipAddress \\\n  -o tsv)\n```\n\nNu lagras IP-adressen för den virtuella datorn i en gränssnittsvariabel. Gå vidare och kontrollera att det är samma värde som du använde för att ansluta till den virtuella datorn i början.\n\n```bash\necho $VM1_IP_ADDR\n```"
- durationInMinutes: 2
  title: "Skapa en ny virtuell dator i det befintliga undernätet"
  content: "Den andra virtuella datorn använder det befintliga undernätet. Du kan hoppa över några steg och lagra den offentliga IP-adressen för den nya virtuella datorn i en miljövariabel direkt eftersom adressen returneras i informationen du får när du skapar den virtuella datorn. Om du behöver annan information om den virtuella datorn senare kan du alltid använda kommandot `az vm show`.\n\n```bash\nVM2_IP_ADDR=$(az vm create -g TutorialResources \\\n  -n TutorialVM2 \\\n  --image UbuntuLTS \\\n  --generate-ssh-keys \\\n  --subnet $SUBNET_ID \\\n  --query publicIpAddress \\\n  -o tsv)\n```\n\nAnslut till den nya virtuella datorn med en SSH-anslutning med hjälp av den sparade IP-adressen.\n\n```bash\nssh $VM2_IP_ADDR\n```\n\nGå vidare och logga ut från den virtuella datorn."
- durationInMinutes: 2
  title: Rensa
  content: "Nu när självstudien har slutförts är det dags att rensa de skapade resurserna. Du kan ta bort enskilda resurser med kommandot `delete`, men det säkraste sättet att ta bort alla resurser i en resursgrupp är med `group delete`.\n\n```azurecli\naz group delete --name TutorialResources --no-wait\n```\n\nDet här kommandot tar bort de resurser som skapades med självstudien och garanterar att de frigörs i rätt ordning. Parametern `--no-wait` ser till att CLI inte blockerar under tiden som borttagningen utförs. Om du vill vänta tills borttagningen har slutförts eller titta på förloppet så kan du använda kommandot `group wait`.\n\n```azurecli\naz group wait --name TutorialResources --deleted\n```\n\nNär rensningen är slutförd är självstudien klar. Fortsätt om du vill se en sammanfattning av allt du har lärt dig och få länkar till resurser som hjälper dig med nästa steg."
- durationInMinutes: 1
  title: Sammanfattning
  content: "Grattis! Du har lärt dig hur du skapar virtuella datorer med nya eller befintliga resurser, använt argumenten `--query` och `--output` för att samla in data som ska lagras i gränssnittsvariabler och tittat på vissa av de resurser som skapas för virtuella Azure-datorer.\n\nHur du nu går vidare beror på hur du har tänkt använda CLI. Det finns en mängd olika material som gör en djupdykning i funktionerna som beskrivs i den här kursen.\n\n### <a name=\"samples\"></a>Exempel\n\nOm du vill komma igång direkt med specifika uppgifter kan du titta på några exempel på skript.\n\n* Arbeta med [virtuella Linux-datorer](/azure/virtual-machines/linux/cli-samples?toc=%2fcli%2fazure%2ftoc.json) och [virtuella Windows-datorer](/azure/virtual-machines/windows/cli-samples?toc=%2fcli%2fazure%2ftoc.json)\n* Arbeta med [webbappar](/azure/app-service/app-service-cli-samples?toc=%2Fcli%2Fazure%2Ftoc.json) och [Azure Functions](/azure/azure-functions/functions-cli-samples?toc=%2fcli%2fazure%2ftoc.json)\n* Arbeta med databaser – [Azure SQL-databaser](/azure/sql-database/sql-database-cli-samples?toc=%2fcli%2fazure%2ftoc.json), [PostgreSQL](/azure/postgresql/sample-scripts-azure-cli?toc=%2fcli%2fazure%2ftoc.json), [MySQL](/azure/mysql/sample-scripts-azure-cli?toc=%2fcli%2fazure%2ftoc.json) och [CosmosDB](/azure/cosmos-db/cli-samples?toc=%2fcli%2fazure%2ftoc.json).\n\n### <a name=\"in-depth-cli-documentation\"></a>Djupgående CLI-dokumentation\n\nDet finns även avsnitt som går djupare in på de CLI-funktioner som visades i självstudiekursen.\n\n* Lär dig mer om [utdataformat](format-output-azure-cli.md)\n* Lär dig mer om [utdatafrågor](query-azure-cli.md)\n* Lär dig mer om [inloggning och auktorisering](authenticate-azure-cli.md)\n\n### <a name=\"other-useful-documentation\"></a>Annan användbar dokumentation\n\nDu kanske vill utforska mer avancerade funktioner för CLI som att [konfigurera standardvärden](azure-cli-configuration.md) eller [tillägg](azure-cli-extensions.md).\n\n### <a name=\"feedback\"></a>Feedback\n\nOm du vill ge feedback, komma med förslag eller ställa frågor om CLI så kan du kontakta oss på en rad olika sätt.\n\n* `az feedback` är ett inbyggt kommando för CLI som gör det möjligt att ge egen feedback till teamet.\n* Skicka in ett funktionsförslag eller en felrapport med CLI på [Azure CLI 2.0-lagringsplatsen](https://github.com/Azure/azure-cli).\n* Ställ en fråga eller få förtydliganden genom att skicka in ett problem på [Azure CLI 2.0-dokumentationslagringsplatsen](https://github.com/Azure/azure-docs-cli-python).\n\nVi hoppas att du trivs med att använda Azure CLI!"
